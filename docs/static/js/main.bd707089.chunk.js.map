{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6KAkCeA,EAhCK,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAKlB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACG,sBAAMC,SAVW,SAACC,GACzBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,MAKV,SACK,uBACJO,KAAK,OACLC,MAAOT,EACPU,SAlBqB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCThBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCeLO,EAZK,SAAC,GAAgB,IAAfH,EAAc,EAAdA,MAAMV,EAAQ,EAARA,IAE5B,OACI,sBAAKc,UAAU,OAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC6BKO,EAjCC,SAAC,GAAe,IAAdnB,EAAa,EAAbA,SAEX,ECHqB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAbAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACJC,YAAW,WACTJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEX,UAEP,IAGKC,EDjB2BM,CAAa3B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAK3B,OACA,qCACA,6BAAKpB,IACJoB,GAAW,wCAER,qBAAKJ,UAAU,YAAf,SAIIH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAGIA,GAFCA,EAAIC,aEKNiB,EAtBM,WAEjB,MAAoC1C,mBAAU,CAAC,iBAA/C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAGA,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACK4C,EAAWpB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CACAA,SAAUA,GADIA,Y,MCb/B8B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.bd707089.chunk.js","sourcesContent":["import React, { useState } from 'react' \r\n\r\nconst AddCategory = ({setCategories}) =>{\r\n\r\n\r\n\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n   const handleInputChange = (e) =>{\r\n      setInputValue(e.target.value)\r\n   }\r\n   \r\n   const handleSubmit = (e) =>{\r\ne.preventDefault()\r\n\r\nif(inputValue.trim().length >2){\r\n   setCategories(cats =>[inputValue, ...cats])\r\n   setInputValue('')\r\n}\r\n\r\n   }\r\n    return(\r\n       <form onSubmit={ handleSubmit }>\r\n            <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n    />\r\n       </form>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default AddCategory","export const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Dc7e84G2YkMYGpT0aNEYLeT5b0n5VO4w`\r\n    const resp = await fetch( url)\r\n    const {data} = await resp.json()\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    return gifs\r\n}\r\n\r\n\r\n","import React from 'react' \r\n\r\n\r\nconst GifGridItem = ({title,url}) =>{\r\n   // console.log(id,title,url)\r\nreturn(\r\n    <div className=\"card\">\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default GifGridItem","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({category}) =>{\r\n\r\n       const {data:images, loading} = useFetchGifs(category);\r\n      \r\n\r\n\r\n    \r\nreturn(\r\n<>\r\n<h3>{category}</h3>\r\n{loading && <p>Loading</p>}\r\n\r\n    <div className=\"card-grid\">\r\n       \r\n      \r\n           {\r\n        images.map(img =>(\r\n            <GifGridItem \r\n            key={img.id}\r\n            //Desestructuracion ...img\r\n            {...img}\r\n            />\r\n            \r\n               \r\n            ))\r\n                }\r\n           \r\n    \r\n    </div>\r\n</>\r\n)\r\n}\r\n\r\nexport default GifGrid","import { useEffect, useLayoutEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n\r\n    useEffect(()=>{\r\n        getGifs(category) \r\n        .then(imgs =>{\r\n          setTimeout(()=>{\r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            })\r\n          }, 2000)\r\n        })\r\n    },[])\r\n\r\n\r\n    return state //es {data:[], loading:true}\r\n}","import React, { useState } from 'react' \r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState( ['Harry potter'])\r\n \r\n   \r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n      \r\n        <ol>\r\n            {categories.map( category =>(\r\n                \r\n                 <GifGrid key={category} \r\n                 category={category}/>\r\n            ))}\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}